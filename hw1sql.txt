- Question 0
CREATE VIEW q0(era)
AS
  SELECT MAX(era)
  FROM pitching;

-- Question 1i
CREATE VIEW q1i(namefirst, namelast, birthyear)
AS
  SELECT namefirst, namelast, birthyear
        WHERE weight > 300;

-- Question 1ii
CREATE VIEW q1ii(namefirst, namelast, birthyear)
AS
  SELECT SELECT namefirst, namelast, birthyear 
        FROM people 
        WHERE namefirst LIKE '% %';


-- Question 1iii
CREATE VIEW q1iii(birthyear, avgheight, count)
AS
  SELECT birthyear, AVG(height), COUNT(birthyear) 
        FROM people 
        GROUP BY birthyear 
        ORDER BY birthyear

;

-- Question 1iv
CREATE VIEW q1iv(birthyear, avgheight, count)
AS
  SELECT birthyear, AVG(height), COUNT(birthyear)
        FROM people
        GROUP BY birthyear
        HAVING COUNT(height) > 70 ORDER BY birthyear
;

-- Question 2i
CREATE VIEW q2i(namefirst, namelast, playerid, yearid)
AS
   SELECT p.namefirst, p.namelast, s.playerid, s.yearid 
        FROM people AS p INNER JOIN halloffame AS s ON
        p.playerid = s.playerid 
        WHERE s.inducted = 'Y' 
        ORDER BY s.yearid DESC
;
-- Question 2ii
CREATE VIEW q2ii(namefirst, namelast, playerid, schoolid, yearid)
AS
   	
  SELECT DISTINCT p.namefirst, p.namelast, s.playerid,c.schoolid, s.yearid
        FROM collegeplaying AS c, people AS p INNER JOIN halloffame AS s ON
        p.playerid = s.playerid
        WHERE s.inducted = 'Y' AND c.playerid = p.playerid
        AND p.playerid IN ( SELECT c.playerid FROM collegeplaying AS c INNER JOIN schools AS sc ON 		c.schoolid = sc.schoolid WHERE sc.schoolstate LIKE '%CA%') 
			ORDER BY  s.yearid DESC;

-- Question 2iii
CREATE VIEW q2iii(playerid, namefirst, namelast, schoolid)
AS
 SELECT p.playerid, p.namefirst, p.namelast, c.schoolid
    	FROM collegeplaying AS c RIGHT OUTER JOIN people AS p ON
  	  	p.playerid = c.playerid 
	  	WHERE p.playerid IN  (SELECT p.playerid FROM people AS p INNER JOIN halloffame AS s ON
        p.playerid = s.playerid
        WHERE s.inducted = 'Y')
			ORDER BY p.playerid, c.schoolid ASC ;
;

-- Question 3i
CREATE VIEW q3i(playerid, namefirst, namelast, yearid, slg)
AS
  SELECT p.playerid, p.namefirst, p.namelast, b.yearid, ((b.h - b.h2b - b.h3b - b.hr) + (2*b.h2b) + 	(3*b.h3b) + (4*b.hr))/(cast(b.ab as real)) as slg
     FROM people AS p INNER JOIN batting as b ON
   p.playerid = b.playerid
   WHERE b.ab > 50
   ORDER BY slg DESC, b.yearid,p.playerid ASC LIMIT 10;
;

-- Question 3ii
CREATE VIEW q3ii(playerid, namefirst, namelast, lslg)
AS  
  SELECT p.playerid, p.namefirst, p.namelast,SUM((b.h - b.h2b - b.h3b - b.hr) + (2*b.h2b) + (3*b.h3b) + (4*b.hr))/(cast(SUM(b.ab) as real)) as lslg
     FROM people AS p INNER JOIN batting as b ON
   p.playerid = b.playerid
   WHERE b.ab > 0
   GROUP BY p.playerid
   HAVING (SUM(b.ab) > 50)
   ORDER BY lslg DESC, p.playerid ASC LIMIT 10
  
;

-- Question 3iii
CREATE VIEW q3iii(namefirst, namelast, lslg)
AS
  SELECT 1, 1, 1 -- replace this line
;

-- Question 4i
CREATE VIEW q4i(yearid, min, max, avg, stddev)
AS
  SELECT 1, 1, 1, 1, 1 -- replace this line
;

-- Question 4ii
CREATE VIEW q4ii(binid, low, high, count)
AS
  SELECT 1, 1, 1, 1 -- replace this line
;

-- Question 4iii
CREATE VIEW q4iii(yearid, mindiff, maxdiff, avgdiff)
AS
  SELECT 1, 1, 1, 1 -- replace this line
;




