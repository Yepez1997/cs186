DROP VIEW IF EXISTS q0, q1i, q1ii, q1iii, q1iv, q2i, q2ii, q2iii, q3i, q3ii, q3iii, q4i, q4ii, q4iii, q4iv, q4v;

-- Question 0
CREATE VIEW q0(era) 
AS
  SELECT MAX(era)
 	 FROM pitching
;

-- Question 1i
CREATE VIEW q1i(namefirst, namelast, birthyear)
AS
  SELECT namefirst, namelast, birthyear 
  	FROM people
	WHERE weight > 300  
;

-- Question 1ii
CREATE VIEW q1ii(namefirst, namelast, birthyear)
AS
  SELECT namefirst, namelast, birthyear 
	FROM people 
	WHERE namefirst LIKE '% %'
;

-- Question 1iii
CREATE VIEW q1iii(birthyear, avgheight, count)
AS
  SELECT birthyear, AVG(height) AS avgheight, COUNT(*) as count
	FROM people 
		GROUP BY birthyear 
		ORDER BY birthyear

;

-- Question 1iv
CREATE VIEW q1iv(birthyear, avgheight, count)
AS
  SELECT birthyear, AVG(height) AS avgheight, COUNT(birthyear) as count
        FROM people
        GROUP BY birthyear
        HAVING AVG(height) > 70 
		ORDER BY birthyear
;

-- Question 2i
CREATE VIEW q2i(namefirst, namelast, playerid, yearid)
AS
   SELECT p.namefirst, p.namelast, s.playerid, s.yearid 
		FROM people AS p INNER JOIN halloffame AS s ON  
		p.playerid = s.playerid 
		WHERE s.inducted = 'Y'
		ORDER BY s.yearid DESC
;

-- Question 2ii
CREATE VIEW q2ii(namefirst, namelast, playerid, schoolid, yearid)
AS
  SELECT p.namefirst, p.namelast, h.playerid,c.schoolid, h.yearid
        FROM people AS p 
		INNER JOIN halloffame AS h ON p.playerid = h.playerid
		INNER JOIN collegeplaying AS c ON c.playerid = p.playerid
		INNER JOIN schools AS s ON s.schoolid = c.schoolid
        WHERE h.inducted = 'Y' AND s.schoolstate = 'CA'
		ORDER BY  h.yearid DESC, c.schoolid, p.playerid ASC
;

--AND c.playerid = p.playerid
-- Question 2iii
CREATE VIEW q2iii(playerid, namefirst, namelast, schoolid)
AS
  SELECT p.playerid, p.namefirst, p.namelast, c.schoolid
    	FROM collegeplaying AS c RIGHT OUTER JOIN people AS p ON
  	  	p.playerid = c.playerid 
	  	WHERE p.playerid IN  (SELECT p.playerid FROM people AS p INNER JOIN halloffame AS s ON
        p.playerid = s.playerid
        WHERE s.inducted = 'Y')
			ORDER BY p.playerid DESC, c.schoolid ASC 
;

-- Question 3i
CREATE VIEW q3i(playerid, namefirst, namelast, yearid, slg)
AS
  SELECT p.playerid, p.namefirst, p.namelast, b.yearid, ((b.h - b.h2b - b.h3b - b.hr) + (2*b.h2b) + (3*b.h3b) + (4*b.hr))/(cast(b.ab as real)) as slg
     	FROM people AS p INNER JOIN batting as b ON
   	 	p.playerid = b.playerid
   	 	WHERE b.ab > 50
   	 	ORDER BY slg DESC, b.yearid,p.playerid ASC LIMIT 10
;

-- Question 3ii
CREATE VIEW q3ii(playerid, namefirst, namelast, lslg)
AS
 SELECT p.playerid, p.namefirst, p.namelast, SUM((b.h - b.h2b - b.h3b - b.hr) + (2*b.h2b) + (3*b.h3b) + (4*b.hr))/(cast(SUM(b.ab) as real)) as lslg
    	FROM people AS p INNER JOIN batting as b ON
     	p.playerid = b.playerid
     	WHERE b.ab > 0
   		GROUP BY p.playerid
   		HAVING (SUM(b.ab) > 50)
   		ORDER BY lslg DESC, p.playerid ASC LIMIT 10
;

-- Question 3iii
CREATE VIEW q3iii(namefirst, namelast, lslg)
AS
  WITH LB AS (SELECT p.playerid,SUM((b.h - b.h2b - b.h3b - b.hr) + (2*b.h2b) + (3*b.h3b) + (4*b.hr))/(cast(SUM(b.ab) as real)) as lslg
      	FROM people AS p INNER JOIN batting as b ON
    	p.playerid = b.playerid
    	WHERE b.ab > 0
    	GROUP BY p.playerid
    	HAVING (SUM(b.ab) > 50)
    	ORDER BY lslg DESC, p.playerid ASC )
    		SELECT p.namefirst, p.namelast, b.lslg
    		FROM people AS p INNER JOIN LB AS b ON p.playerid = b.playerid
    		WHERE b.lslg > (SELECT lslg FROM LB WHERE playerid = 'mayswi01')
    		ORDER BY p.namefirst ASC
;

-- Question 4i
CREATE VIEW q4i(yearid, min, max, avg, stddev)
AS
  WITH STD AS (SELECT yearid, STDDEV(salary) from salaries GROUP BY yearid) 
  SELECT o.yearid, min(o.salary),max(o.salary), avg(o.salary), max(s.stddev) 
		FROM salaries as o INNER JOIN STD as s ON o.yearid = s.yearid GROUP BY o.yearid ORDER BY o.yearid

;

-- Question 4ii
CREATE VIEW q4ii(binid, low, high, count)
AS
  WITH SALARIES2016 AS (SELECT MIN(s.salary), MAX(s.salary)
             FROM salaries AS s WHERE s.yearid = '2016'
  ), BINS AS (SELECT i AS binid, 
                  i*(SALARIES2016.max-SALARIES2016.min)/10.0 + SALARIES2016.min AS low,
                  (i+1)*(SALARIES2016.max-SALARIES2016.min)/10.0 + SALARIES2016.min AS high
           FROM generate_series(0,9) AS i, SALARIES2016)
  SELECT binid, low, high, COUNT(*) 
  FROM BINS INNER JOIN salaries AS s 
         ON s.salary >= BINS.low 
            AND (s.salary < BINS.high OR binid = 9 AND s.salary <= BINS.high)
            AND yearid = '2016'
  GROUP BY binid, low, high
  ORDER BY binid ASC
;



-- Question 4iii
CREATE VIEW q4iii(yearid, mindiff, maxdiff, avgdiff)
AS
  WITH CURRENTSALARY AS (SELECT yearid, MIN(SALARY), MAX(SALARY), AVG(SALARY) FROM salaries GROUP BY yearid)
  SELECT nextsal.yearid, 
		nextsal.min - currentsal.min AS mindiff,
		nextsal.max - currentsal.max AS maxdiff,
		nextsal.avg - currentsal.avg AS avgdiff
  FROM CURRENTSALARY AS currentsal INNER JOIN CURRENTSALARY AS nextsal 
  ON nextsal.yearid = currentsal.yearid + 1
  ORDER BY nextsal.yearid ASC

;

-- Question 4iv
CREATE VIEW q4iv(playerid, namefirst, namelast, salary, yearid)
AS
	WITH TWOTHOU AS (SELECT playerid, yearid, salary FROM salaries WHERE yearid = 2000 AND salary = (SELECT max(salary) from salaries WHERE yearid = 2000)
	UNION 
	SELECT playerid, yearid, salary FROM salaries WHERE yearid = 2001 AND salary = (SELECT max(salary) from salaries WHERE yearid = 2001)
))
	
	SELECT p.playerid, p.namefirst, p.namelast, t.salary, t.yearid FROM TWOTHOU AS t INNER JOIN people AS p ON p.playerid = t.playerid
;

-- Question 4v
CREATE VIEW q4v(team, diffAvg) AS
 	SELECT allstarfull.teamid AS team, MAX(s.salary) - MIN(s.salary) AS diffAvg FROM allstarfull INNER JOIN salaries AS s 
	ON allstarfull.playerid = s.playerid 
	WHERE allstarfull.yearid = 2016 AND allstarfull.yearid = s.yearid 
	GROUP BY allstarfull.teamid 
	ORDER BY allstarfull.teamid

;


-- connect player id with salary and team 
-- for each team in 2016





